/**
 * @file
 * Layout rules for 3-up content
 */

// =============================================================================
// Ruleset for content going from 1-column at mobile,
// to two-column, to 3-column as horizontal space allows
// $omega-gutter: "false" = will wrap an item
// $omega-gutter: "true"  = will not wrap an item
// =============================================================================

.l-3up {
  @include zen-grid-item-base();
  @include zen-grid-item(12, 1);
  @include zen-new-row();

  &:nth-of-type(3n+1) {

    @include breakpoint($bp1) {
      @include zen-grid-item(6, 1);
    }

    @include breakpoint($bp3) {
      @include zen-new-row();
      @include zen-grid-item(4, 1);
    }
  }

  &:nth-of-type(3n+2) {
    @include breakpoint($bp1) {
      @include zen-grid-item(6, 7);
      @include zen-new-row(none);
    }

    @include breakpoint($bp3) {
      @include zen-grid-item(4, 5);
    }
  }

  &:nth-of-type(3n+3) {

    @include breakpoint($bp1) {
      @include zen-new-row();
      @include zen-grid-item(6, 1);
    }

    @include breakpoint($bp3) {
      @include zen-new-row(none);
      @include zen-grid-item(4, 9);
    }
  }
}

// =============================================================================
// Basic 3-up layouts
// =============================================================================

.l-3up--1 {
  @include zen-new-row();
  @include zen-grid-item(12, 1);

  @include breakpoint($bp1) {
    @include zen-grid-item(4, 1);
  }
}

.l-3up--2 {
  @include zen-new-row();
  @include zen-grid-item(12, 1);

  @include breakpoint($bp1) {
    @include zen-new-row(none);
    @include zen-grid-item(4, 5);
  }
}

.l-3up--3 {
  @include zen-new-row();
  @include zen-grid-item(12, 1);

  @include breakpoint($bp1) {
    @include zen-new-row(none);
    @include zen-grid-item(4, 9);
  }
}
